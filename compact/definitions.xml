  <define>
    <constant name="world_side" value="30*m"/>
    <constant name="world_x" value="world_side"/>
    <constant name="world_y" value="world_side"/>
    <constant name="world_z" value="100*m"/>

    <constant name="Pi" value="3.14159265359"/>
    <constant name="mil" value="0.0254*mm"/>
    <constant name="inch" value="2.54*cm"/>

    <documentation>
      ## Detector IDs

      ### Note about ACTS tracking geometry construction

The tracking surfaces need to be structured in a barrel + endcapP + endcapN where 
endcapP/endcapN are the endcaps at positive/negative z values. 
See https://acts.readthedocs.io/en/latest/plugins/dd4hep.html for more details.

The tracking geometry needs to be constructed from cylinders from the inside out. For this reason
each layer needs its own subsystem assembly. This increases the number of top level system IDs. 
For example the silicon tracker needs 3 IDs for each area (endcap+barrel+endcap) and a subassembly for each
layer. Therefore it needs a minimum of 20 IDs. Therefore we will allocate blocks of ~25 for each major subsystem.
Note, future improvements will likely include a more sophisticated ACTS-dd4hep plugin, 
eliminating the need for so many system IDs at construction time.

This barrel/endcap structure needs IDs to be in increasing order going outward. 
The space of IDs for the subassemblies starts at (Subassembly_ID*10+101).

The unused IDs below are saved for future use.
    </documentation>


    <documentation> 

      ### Allocated IDs 

      #### (1-9) Reserved IDs

      - Unused IDs: 1-9 

      #### (10-24) Interaction region beamline 

      - Beampipe ID : 10
      - Unused   IDs: 11-24

    </documentation> 
    <constant name="BeamPipe_ID"          value="1"/>
    <constant name="ECalEndcapP_ID"       value="2"/>
    <constant name="ECalEndcapPInsert_ID" value="3"/>
    <constant name="LeakageDetector_ID"   value="4"/>
    <constant name="HCalEndcapP_ID"       value="5"/>
    <constant name="HCalEndcapPInsert_ID" value="6"/>

    <constant name="CrossingAngle"   value="-0.025*rad "/>
    <constant name="IPBeampipe_rmax" value="2.501*25.4*mm/2.0"/>
    <constant name="Beampipe_rmax"   value="IPBeampipe_rmax"/>
    <constant name="BeampipeOD"      value="2.0*IPBeampipe_rmax"/>
    
    <documentation>

## Detector Definition Parameters 

## Constant naming convention

SubSystemNameFurtherDescriptor_quantity

Examples: 
 - TrackerBarrelInside_length
 - EcalEndcapP_rmin
 - MRichFresnelLens_thickness

### Naming Barrel and Endcaps

 - **Barrel**
 - **EndcapP**
   - Postive Endcap (+z direction)
   - This is the ion beam side
 - **EndcapN**
   - Negative Endcap (-z direction) 
   - This is the electron beam side
       
## Parameter nomenclature

 - "rmin", "rmax", "thickness" all refer to the radial direction.
 - "zmin", "zmax", "length", "offset" all refer to the z direction.
 - Positive and Negative are  "EndcapP" and "EndcapN", respectively.
 - All values are positive (except offsets, which are positive in the hadron direction, i.e. towards EndCapP).
     When refering to a negative endcap z position, the values are
     also positive then negated when required. (Many endcap constructions are mirrored, 
     hence a postive value.)
 - We will try to keep the subsystem component name first and the parameter after an "_" (eg, EcalBarrel_length").

    </documentation>

    <documentation>
      ## Rapidity constants
    </documentation>
    <constant name="Eta1_1_tan"       value="tan(2*atan(exp(-1.1)))" />
    <constant name="Eta1_4_tan"       value="tan(2*atan(exp(-1.4)))" />
    <constant name="Eta3_5_tan"       value="tan(2*atan(exp(-3.5)))" />
    <constant name="Eta3_6_tan"       value="tan(2*atan(exp(-3.6)))" />
    <constant name="Eta3_7_tan"       value="tan(2*atan(exp(-3.7)))" />
    <constant name="Eta3_8_tan"       value="tan(2*atan(exp(-3.8)))" />
    <constant name="Eta3_9_tan"       value="tan(2*atan(exp(-3.9)))" />
    <constant name="Eta4_0_tan"       value="tan(2*atan(exp(-4.0)))" />
    <constant name="Eta4_1_tan"       value="tan(2*atan(exp(-4.1)))" />
    <constant name="Eta4_2_tan"       value="tan(2*atan(exp(-4.2)))" />
    <constant name="Eta4_3_tan"       value="tan(2*atan(exp(-4.3)))" />
    <constant name="Eta4_4_tan"       value="tan(2*atan(exp(-4.4)))" />
    <constant name="Eta4_5_tan"       value="tan(2*atan(exp(-4.5)))" />
    <constant name="Eta4_6_tan"       value="tan(2*atan(exp(-4.6)))" />
    <constant name="Eta4_7_tan"       value="tan(2*atan(exp(-4.7)))" />
    <constant name="Eta4_8_tan"       value="tan(2*atan(exp(-4.8)))" />

    <documentation>
      ### Central Tracking Region
      TrackerBarrel_rmax: also the rmin for the barrel PID system (DIRC)
      Note: The barrel rmax and endcap lengths are the maximum extent allowed for
      the barrel and endcap layers, not the position of the final layer.


    </documentation>

    <constant name="CentralTrackingRegion_rmax"   value="950.0*mm" />
    <constant name="CentralTrackingRegionN_zmax"  value="1500.0*mm" />

    <documentation level="0">
    ### PID Detector Region Parameters
    </documentation>

    <constant name="BackwardPIDRegion_zmin"       value="CentralTrackingRegionN_zmax" />
    <constant name="BackwardPIDRegion_length"     value="60.0*cm" />


    <comment> Note: PID has space for DIRC, ExtraSpace sits past the PID</comment>
    <constant name="BarrelPIDRegion_thickness"    value="8.0 * cm" />
    <constant name="BarrelExtraSpace_thickness"   value="0.0 * cm" />

    <documentation>
    ## Forward/backward tracking region behind the PID detectors
    </documentation>

    <constant name="BackwardTrackingRegion_length"  value="0.0*cm" />

    <comment> Total length of the endcap detectors in front of the calorimeter</comment>
    <constant name="BackwardInnerEndcapRegion_length"    value="BackwardPIDRegion_length + BackwardTrackingRegion_length"/>

    <documentation>
    ## Calorimeter Parameters
    </documentation>
    <constant name="EcalEndcapN_zmin"               value="BackwardPIDRegion_zmin + BackwardInnerEndcapRegion_length"/>
    <constant name="EcalBarrel_rmin"                value="CentralTrackingRegion_rmax + BarrelPIDRegion_thickness + BarrelExtraSpace_thickness"/>



    <comment> 
      These are used by ddsim, the region where we store all secondaries 

      For now they are forced to be symmetric, and we cover up to the start of the backward ECAL.
      (this means in the forward region we stop in the middle of the RICH).
    </comment>

    <constant name="tracker_region_rmax"   value="EcalBarrel_rmin"/>
    <constant name="tracker_region_zmax"   value="+EcalEndcapP_zmin"/>
    <constant name="tracker_region_zmin"   value="-EcalEndcapN_zmin"/>
  </define>
